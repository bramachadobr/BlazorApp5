@page "/notafiscallist"

@rendermode InteractiveServer
@inject INFService notaService
@inject NavigationManager Navigation
@inject IJSRuntime jsrunTime
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>Weather</PageTitle>

<h1>Lista de Notas NF`s</h1>

@if (listaNota is null)
{
    <p><em>Carregando...</em></p>
}
else
{

    <div class="container ">

        <div class="row mb-2">
            <div class="col-12" style="text-align:right;">
                <button class="btn btn-lg btn-primary" @onclick="@(()=>Navigation.NavigateTo("/notafiscal"))"><i class="bi bi-plus-circle-fill"></i> Novo</button>
            </div>
        </div>

        <div class="form-control">

            <table class="table">
                <thead>
                    <tr>
                        <th>Número</th>
                        <th>Emissão</th>
                        <th>Validação</th>
                        <th>Fornecedor</th>
                        <th>Cliente</th>
                        <th>R$ Valor</th>
                        <th>Editar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var nf in listaNota)
                    {
                        <tr>
                            <td>@nf.NumeroNF</td>
                            <td>@nf.DataEmissao</td>
                            <td>@nf.CodigoValidacao</td>
                            <td>@nf.NomeFornecedor</td>
                            <td>@nf.NomeCliente</td>
                            <td>@nf.ValorTotal</td>
                            <td>
                                <button id="edit" class="btn btn-sm btn-primary" @onclick="()=>EditItem(nf.Id)"><i class="bi bi-pencil-fill"></i></button>
                                <button id="delete" class="btn btn-sm btn-danger" @onclick="()=> ShowConfirmationAsync(nf.Id)"><i class="bi bi-trash3-fill"></i></button>
                                <button id="print" class="btn btn-sm btn-info" @onclick="()=> ShowPrintPdf(nf.Id)"><i class="bi bi-printer-fill"></i></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <ConfirmDialog @ref="dialog" />

}

@code 
{
    private ConfirmDialog dialog = default!;

    private async Task ShowConfirmationAsync(Guid id)
    {
        var confirmation = await dialog.ShowAsync(
            title: "Voce realmente deseja apagar isto ?",
            message1: "Ao apagar esse registro, ele nao podera ser recuperado.",
            message2: "Deseja Apagar?");

        if (confirmation)
        {
            await notaService.DeleteNFbyId(id);
            Navigation.Refresh();
        }
    }

    private async Task ShowPrintPdf(Guid id)
    {
        Navigation.NavigateTo($"/notaFiscalPDF/{id.ToString()}", true);
    }

    private IEnumerable<NotaFiscal>? listaNota = null;

    protected override async void OnAfterRender(bool firstRender)
    {
        var logado =  await LocalStorage.GetItemAsync<string>("logado");

        if (logado !="ok")
        {
            Navigation.NavigateTo("login");
        }
    }

    protected override async Task OnInitializedAsync()
    {


        if (listaNota == null)
        {
            this.listaNota = await notaService.GetNotasFicasis();
        }
    }

    public async Task ApagarItem(Guid id)
    {
        NotaFiscal nota = await notaService.GetNotaFiscalById(id);
        await notaService.DeleteNFbyId(nota.Id);
    }

    public void EditItem(Guid id)
    {
        Navigation.NavigateTo($"/notafiscal/{id.ToString()}", true);
    }

}